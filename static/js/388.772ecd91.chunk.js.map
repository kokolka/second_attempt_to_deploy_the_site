{"version":3,"file":"static/js/388.772ecd91.chunk.js","mappings":"yNACA,EAA2B,8BAA3B,EAA2E,qCAA3E,EAAkI,qCAAlI,EAAuL,mCAAvL,EAAmP,4CAAnP,EAAoT,wCAApT,EAA4W,mCAA5W,EAAwa,4CAAxa,EAAye,wCAAze,EAAiiB,mCAAjiB,EAA6lB,4CAA7lB,EAA8pB,wCAA9pB,EAAqtB,kCAArtB,EAA+wB,2C,SCE3wBA,EAAW,GAEXC,EAAY,GAEVC,EAAiB,SAACC,GACpB,OAAO,gBAAKC,UAAWD,EAAME,MAAQ,EAC/BC,EACAH,EAAME,MAAQ,GAAKF,EAAME,KAAO,EAC5BC,EACAH,EAAME,MAAQ,GAAKF,EAAME,KAAO,EAC5BC,EACAA,EANP,UAQH,gBAAKF,UAAWD,EAAME,MAAQ,EACxBC,EACAH,EAAME,MAAQ,GAAKF,EAAME,KAAO,EAC5BC,EACAH,EAAME,MAAQ,GAAKF,EAAME,KAAO,EAC5BC,EACAA,EANd,UAQI,gBAAKC,IAAI,+DACLH,UAAWD,EAAME,MAAQ,EACnBC,EACAH,EAAME,MAAQ,GAAKF,EAAME,KAAO,EAC5BC,EACAH,EAAME,MAAQ,GAAKF,EAAME,KAAO,EAC5BC,EACAA,SAOxBE,EAAmB,SAACC,GACtB,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,IACxBV,EAASW,KAAKC,KAAKC,KAAK,EAAAD,KAAKE,SAAqB,KA2F1D,EAnEoB,SAACX,GAEjB,OAA4BY,EAAAA,EAAAA,WAAS,WACjC,OAAO,KADX,eAAKC,EAAL,KAAcC,EAAd,KAGA,GAAoCF,EAAAA,EAAAA,UAASf,EAASkB,QAAtD,eAAKC,EAAL,KAAkBC,EAAlB,MAEAC,EAAAA,EAAAA,YAAU,YA3BU,SAAChB,EAAMiB,EAAMC,GACjC,IAAIC,GAEYA,EAAbnB,GAAQ,IAAS,EACZA,GAAQ,IAAS,EACjBA,GAAQ,KACRA,GAAQ,IADS,EAEjBA,GAAQ,IAAS,EACjBA,GAAQ,IAAS,EACjBA,GAAQ,KAAU,EAClBA,GAAQ,KAAU,EAClBA,GAAQ,KAAU,EACA,KAGjBkB,GACLD,EAAKE,GAYLC,CAAgBtB,EAAMuB,QAAST,EAAYD,KAC5C,CAACG,EAAaH,EAASb,EAAMuB,UAsChC,OAJwB,IAApB1B,EAASkB,QACTV,EAAiB,KAIjB,iBAAKJ,UAAWE,EAAhB,WACI,gBAAKF,UAAWE,EAAhB,SA/BiB,YAPH,WAClBL,EAAY,GACZ,IAAK,IAAIS,EAAI,EAAGA,EAAIM,EAASN,IACzBT,EAAUU,KAAK,IAKnBgB,GAEA,IADA,IAAIC,EAAW,EACNC,EAAI,EAAGA,EAAI7B,EAASkB,OAAQW,IACjC5B,EAAU2B,GAAUjB,KAAKX,EAAS6B,KAElCD,GAAsB,IACNZ,IACZY,EAAW,GAInB,IAAIE,EAAa,EAUjB,OATmB7B,EAAU8B,KAAI,SAAAC,GAE7B,OADAF,GAA0B,GACnB,gBAAuB1B,UAAWE,EAAlC,SACF0B,EAAGD,KAAI,SAAAE,GACJ,OAAO,SAAC/B,EAAD,CAAgBG,KAAM4B,QAFpBH,MAiBZI,MAEL,gBAAK9B,UAAWE,EAAhB,UACI,mBACIF,UAAWE,EACX6B,QAAS,WACL3B,EAAiB,IACjBY,EAAepB,EAASkB,SAJhC,2B,UCnGhB,GAAekB,EAAAA,EAAAA,KAJF,SAACC,GAAD,MAAW,CACpBX,SAASY,EAAAA,EAAAA,IAAWD,MAGK,CAACE,WAAAA,EAAAA,IAA9B,EAX6B,SAACpC,GAE1B,OADAqC,EAAAA,EAAAA,GAAY,kBAER,SAAC,GAAD,UAAiBrC","sources":["webpack://my-app-1-2/./src/components/Infinity cat/OnlyCatPage.module.css?defa","components/Infinity cat/OnlyCatPage.jsx","components/Infinity cat/OnlyCatPageContainer.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main_box\":\"OnlyCatPage_main_box__AvOgo\",\"foto_main_block\":\"OnlyCatPage_foto_main_block__j1yMP\",\"columns_element\":\"OnlyCatPage_columns_element__RVEV0\",\"foto_block__1\":\"OnlyCatPage_foto_block__1__QUgb9\",\"foto_block__element__1\":\"OnlyCatPage_foto_block__element__1__i3VLZ\",\"foto_block__cat__1\":\"OnlyCatPage_foto_block__cat__1__NbYYH\",\"foto_block__2\":\"OnlyCatPage_foto_block__2__u-lpg\",\"foto_block__element__2\":\"OnlyCatPage_foto_block__element__2__-IZfB\",\"foto_block__cat__2\":\"OnlyCatPage_foto_block__cat__2__DXlwY\",\"foto_block__3\":\"OnlyCatPage_foto_block__3__0xJYQ\",\"foto_block__element__3\":\"OnlyCatPage_foto_block__element__3__7SCiE\",\"foto_block__cat__3\":\"OnlyCatPage_foto_block__cat__3__LFIRi\",\"button_block\":\"OnlyCatPage_button_block__mdE31\",\"button_block__element\":\"OnlyCatPage_button_block__element__vWFwi\"};","import React, { useEffect, useState } from 'react';\r\nimport s from './OnlyCatPage.module.css';\r\n\r\nlet arrowImg = []; //массив с изображениями\r\n\r\nlet initArrow = []; //массив с колонками, он будет отображаться \r\n\r\nconst ElementFotoBox = (props) => { //элемент фото с рамкой \r\n    return <div className={props.size <= 1\r\n        ? s.foto_block__1\r\n        : props.size <= 2 && props.size > 1\r\n            ? s.foto_block__2\r\n            : props.size <= 3 && props.size > 2\r\n                ? s.foto_block__3\r\n                : s.foto_block__1\r\n    }>\r\n        <div className={props.size <= 1\r\n            ? s.foto_block__element__1\r\n            : props.size <= 2 && props.size > 1\r\n                ? s.foto_block__element__2\r\n                : props.size <= 3 && props.size > 2\r\n                    ? s.foto_block__element__3\r\n                    : s.foto_block__element__1\r\n        }>\r\n            <img src='https://cdn.mos.cms.futurecdn.net/5FmFtc974AjN255w6iELLj.jpg'\r\n                className={props.size <= 1\r\n                    ? s.foto_block__cat__1\r\n                    : props.size <= 2 && props.size > 1\r\n                        ? s.foto_block__cat__2\r\n                        : props.size <= 3 && props.size > 2\r\n                            ? s.foto_block__cat__3\r\n                            : s.foto_block__cat__1\r\n                }\r\n            />\r\n        </div>\r\n    </div>\r\n}\r\n\r\nconst GetRandomSizeImg = (number) => { //заполнение массива изображений рандомными размерами изображений\r\n    for (let i = 0; i < number; i++) {\r\n        arrowImg.push(Math.ceil(Math.random() * (3 - 1) + 1));\r\n    }\r\n}\r\n\r\nconst getColumnNumber = (size, func, lastColumn) =>{ //нужно изменить в соответствии с будстрап сеткой\r\n    let a;\r\n\r\n    if(size <= 279){a = 1}\r\n    else if(size <= 374){a = 2}\r\n    else if(size <= 420){a = 3}\r\n    else if(size <= 520){a = 3}\r\n    else if(size <= 660){a = 4}\r\n    else if(size <= 765){a = 5} //уберается боковая менюшка\r\n    else if(size <= 1020){a = 4}\r\n    else if(size <= 1200){a = 5}\r\n    else if(size <= 1400){a = 7}\r\n    else if(size <= 1900){a = 8}\r\n    else {a = 8}\r\n\r\n    if(a !== lastColumn){\r\n        func(a);\r\n    }\r\n}\r\n\r\nconst OnlyCatPage = (props) => {\r\n\r\n    let [columns, setColumns] = useState(() => {\r\n        return 7;\r\n    }); //локальный state колличества колонок\r\n    let [lengthArrow, setLengthArrow] = useState(arrowImg.length); //локальный state колличества изображений в массиве\r\n\r\n    useEffect(() => {\r\n        getColumnNumber(props.sizeApp, setColumns, columns)//изменение колличества колонок\r\n    }, [lengthArrow, columns, props.sizeApp]);\r\n\r\n    let SetArrowColumns = () => { //добавление необходимого колличества колонок в массив\r\n        initArrow = [];\r\n        for (let i = 0; i < columns; i++) {\r\n            initArrow.push([]); //добавление пустого массива\r\n        }\r\n    }\r\n\r\n    let CreateArrowContent = () => {\r\n        SetArrowColumns();//обновление колличества коллонок\r\n        let countBox = 0;\r\n        for (let j = 0; j < arrowImg.length; j++) {\r\n            initArrow[countBox].push(arrowImg[j]);\r\n\r\n            countBox = countBox + 1;\r\n            if (countBox >= columns) {\r\n                countBox = 0;\r\n            }\r\n        }\r\n\r\n        let counterKey = 0;\r\n        let arrowBoxElem = initArrow.map(el => {\r\n            counterKey = counterKey + 1;\r\n            return <div key={counterKey}  className={s.columns_element}>\r\n                {el.map(yt => {\r\n                    return <ElementFotoBox size={yt} />\r\n                })}\r\n            </div>\r\n        })\r\n\r\n        return arrowBoxElem;\r\n    }\r\n\r\n    if (arrowImg.length === 0) { //инициализация массива с изображениями \r\n        GetRandomSizeImg(10);\r\n    }\r\n\r\n    return (\r\n        <div className={s.main_box}>\r\n            <div className={s.foto_main_block}>\r\n                {CreateArrowContent()}\r\n            </div>\r\n            <div className={s.button_block}>\r\n                <button\r\n                    className={s.button_block__element}\r\n                    onClick={() => {\r\n                        GetRandomSizeImg(10);\r\n                        setLengthArrow(arrowImg.length)\r\n                    }}\r\n                >\r\n                    Add cat\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OnlyCatPage;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getSizeApp } from '../../redux/app-selectors';\r\nimport {setSizeApp} from '../../redux/app-reducer'\r\nimport OnlyCatPage from './OnlyCatPage';\r\nimport setNamePage from '../common/SetNamePage/setNamePage';\r\n\r\nconst OnlyCatPageContainer = (props) =>{\r\n    setNamePage('Infinite cats');\r\n    return(\r\n        <OnlyCatPage {...props}/>\r\n    )\r\n}\r\n\r\nconst mstp = (state) =>({\r\n    sizeApp: getSizeApp(state)\r\n})\r\n\r\nexport default connect(mstp, {setSizeApp})(OnlyCatPageContainer)"],"names":["arrowImg","initArrow","ElementFotoBox","props","className","size","s","src","GetRandomSizeImg","number","i","push","Math","ceil","random","useState","columns","setColumns","length","lengthArrow","setLengthArrow","useEffect","func","lastColumn","a","getColumnNumber","sizeApp","SetArrowColumns","countBox","j","counterKey","map","el","yt","CreateArrowContent","onClick","connect","state","getSizeApp","setSizeApp","setNamePage"],"sourceRoot":""}